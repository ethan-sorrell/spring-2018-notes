* Draft
** Lexical Conventions
Within a program there are keywords, variables, constants, operators, and delimiters.
These are not always mutually exclusive. For instance, whitespace may sometimes
act as a delimiter.
*** Keywords
These are special words reserved by the language in order to provide special
functionality. These include:
*** Identifiers
These are tokens which the user has bound to certain objects. Some objects
will return a value when called while other objects require parameters
to return a value. Variables are bound to a specific scope, and it is
possible for two variables with the same name to have different bindings
in different scopes. This will be described in greater detail in the scoping section.
*** Constants
These are tokens which have innate values associated with them. These values
can fall into one of several types.
**** Integer constants
**** Floating point constants
**** Character constants
**** String constants
**** Boolean constants?
*** Operators
*** Delimiters
*** Comments
*** Function call syntax
A function may be called by writing the name of the procedure followed by the 
arguments to be passed enclosed in parentheses and separated by commas.
Additionally, operators may be used as functions by enclosing them in parentheses.
e.g. 
#+BEGIN_SRC 
function (argument1, argument2, argument3);
(+) (3, 4);
#+END_SRC
** Data Types
*** Primitive Data Types
*** Type class system/ Type families
*** Objects
** Identifiers, scoping, and binding
** Expressions and Operators
*** flow control
**** conditionals
**** looping
*** operators
**** overloading
** Functions
** Program Structure and Scope
